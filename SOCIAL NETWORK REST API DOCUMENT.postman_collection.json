{
	"info": {
		"_postman_id": "2436bced-6c98-4bcb-acd1-7541557dbbb7",
		"name": "SOCIAL NETWORK REST API DOCUMENT",
		"description": "Some custom description of API.\n\nContact Support:\n Name: Hrinkov Sergey\n Email: hrinkovsergey@yandex.ru",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "registration",
					"item": [
						{
							"name": "This method is used to add new user",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"newUser@test.com\",\n  \"password\": \"test\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"registration"
									]
								}
							},
							"response": [
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"registration"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully registered a user",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"registration"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"registration"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"registration"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This method is used to add new admin",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"newAdmin@test.com\",\n  \"password\": \"test\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/registration/admin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"registration",
										"admin"
									]
								}
							},
							"response": [
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/registration/admin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"registration",
												"admin"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/registration/admin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"registration",
												"admin"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully registered a user",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/registration/admin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"registration",
												"admin"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/registration/admin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"registration",
												"admin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "This method is used to enable the user to get their security data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/own",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"own"
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/own",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"own"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/own",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"own"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/own",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"own"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved a user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/own",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"own"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to update security data by this user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"email\": \"user1@test.com\",\n        \"password\": \"test\"\n    },\n    {\n        \"email\": \"user1@test.com\",\n        \"password\": \"testtest\"\n    }\n]",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": \"user1@test.com\",\n        \"password\": \"test\"\n    },\n    {\n        \"email\": \"user1@test.com\",\n        \"password\": \"test\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": \"user1@test.com\",\n        \"password\": \"test\"\n    },\n    {\n        \"email\": \"user1@test.com\",\n        \"password\": \"test\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": \"user1@test.com\",\n        \"password\": \"test\"\n    },\n    {\n        \"email\": \"user1@test.com\",\n        \"password\": \"test\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully updated a user",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": \"user1@test.com\",\n        \"password\": \"test\"\n    },\n    {\n        \"email\": \"user1@test.com\",\n        \"password\": \"test\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": \"user1@test.com\",\n        \"password\": \"test\"\n    },\n    {\n        \"email\": \"user1@test.com\",\n        \"password\": \"test\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to authorize the user",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user1@test.com\",\n    \"password\": \"test\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						},
						"description": "Login user with role user"
					},
					"response": [
						{
							"name": "Logged in successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user1@test.com\",\n    \"password\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user1@test.com\",\n    \"password\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user1@test.com\",\n    \"password\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user1@test.com\",\n    \"password\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user1@test.com\",\n    \"password\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to log out the user",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": [
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"logout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"logout"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"logout"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successful logout",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"logout"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get users by admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved list of users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to authorize the admin",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@test.com\",\n    \"password\": \"test\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						},
						"description": "Login user with role user"
					},
					"response": [
						{
							"name": "Logged in successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user1@test.com\",\n    \"password\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user1@test.com\",\n    \"password\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user1@test.com\",\n    \"password\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user1@test.com\",\n    \"password\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user1@test.com\",\n    \"password\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete user by admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "5",
									"description": "(Required) User id"
								}
							]
						}
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a user",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "user Profiles",
			"item": [
				{
					"name": "friends",
					"item": [
						{
							"name": "This method is used to get friends profiles,  sorted by name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/friends?firstResult=0&maxResults=0&sortParameter=BY_NAME",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										"friends"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "0",
											"description": "The number of the first element of the expected list"
										},
										{
											"key": "maxResults",
											"value": "0",
											"description": "Maximum number of list elements"
										},
										{
											"key": "sortParameter",
											"value": "BY_NAME",
											"description": "Parameter to select sorting"
										}
									]
								}
							},
							"response": [
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends?firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "sortParameter",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends?firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "sortParameter",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved list of users profiles",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends?firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "sortParameter",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends?firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "sortParameter",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This method is used to get friends profiles, sorted by birthday",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/friends?firstResult=0&maxResults=0&sortParameter=BY_BIRTHDAY",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										"friends"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "0",
											"description": "The number of the first element of the expected list"
										},
										{
											"key": "maxResults",
											"value": "0",
											"description": "Maximum number of list elements"
										},
										{
											"key": "sortParameter",
											"value": "BY_BIRTHDAY",
											"description": "Parameter to select sorting"
										}
									]
								}
							},
							"response": [
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends?firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "sortParameter",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved list of users profiles",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends?firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "sortParameter",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends?firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "sortParameter",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends?firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "sortParameter",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This method is used to get friends profiles, sorted by number of friends",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/friends?firstResult=0&maxResults=0&sortParameter=BY_NUMBER_OF_FRIENDS",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										"friends"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "0",
											"description": "The number of the first element of the expected list"
										},
										{
											"key": "maxResults",
											"value": "0",
											"description": "Maximum number of list elements"
										},
										{
											"key": "sortParameter",
											"value": "BY_NUMBER_OF_FRIENDS",
											"description": "Parameter to select sorting"
										}
									]
								}
							},
							"response": [
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends?firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "sortParameter",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved list of users profiles",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends?firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "sortParameter",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends?firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "sortParameter",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends?firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "sortParameter",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This method is used to get a friend who will have a birthday soon",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/friends/birthday",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										"friends",
										"birthday"
									]
								}
							},
							"response": [
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/birthday",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"birthday"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/birthday",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"birthday"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/birthday",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"birthday"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved user profile",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/birthday",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"birthday"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This method is used to get a list of friends subscribed to this profile",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/friends/requests?firstResult=0&maxResults=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										"friends",
										"requests"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "0",
											"description": "The number of the first element of the expected list"
										},
										{
											"key": "maxResults",
											"value": "0",
											"description": "Maximum number of list elements"
										}
									]
								}
							},
							"response": [
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/requests?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"requests"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved list of users profiles",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/requests?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"requests"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/requests?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"requests"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/requests?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"requests"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This method used you to confirm the user as a friend",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/friends/positiveRequests/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										"friends",
										"positiveRequests",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "(Required) User profile id"
										}
									]
								}
							},
							"response": [
								{
									"name": "User added as friend successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/positiveRequests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"positiveRequests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/positiveRequests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"positiveRequests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/positiveRequests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"positiveRequests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/positiveRequests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"positiveRequests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/positiveRequests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"positiveRequests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This method is used to remove a user from friends",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/friends/negativeRequests/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										"friends",
										"negativeRequests",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "3",
											"description": "(Required) User profile id"
										}
									]
								}
							},
							"response": [
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/negativeRequests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"negativeRequests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/negativeRequests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"negativeRequests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/negativeRequests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"negativeRequests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/negativeRequests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"negativeRequests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User removed from friends successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/negativeRequests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"negativeRequests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This method is used to send a friend request",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/friends/requests/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										"friends",
										"requests",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "3",
											"description": "(Required) User profile id"
										}
									]
								}
							},
							"response": [
								{
									"name": "Friend request sent successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"requests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"requests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"requests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"requests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"requests",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This method is used to get public messages of friends",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/friends/publicMessages?firstResult=0&maxResults=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										"friends",
										"publicMessages"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "0",
											"description": "The number of the first element of the expected list"
										},
										{
											"key": "maxResults",
											"value": "0",
											"description": "Maximum number of list elements"
										}
									]
								}
							},
							"response": [
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/publicMessages?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"publicMessages"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/publicMessages?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"publicMessages"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved list of public messages",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/publicMessages?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"publicMessages"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userProfiles/friends/publicMessages?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userProfiles",
												"friends",
												"publicMessages"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "This method is used to get users profiles, sorted by registartion date",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userProfiles?firstResult=0&maxResults=0&sortParameter=BY_REGISTRATION_DATE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userProfiles"
							],
							"query": [
								{
									"key": "endPeriodDate",
									"value": "2004-11-13",
									"description": "Parameter with end date",
									"disabled": true
								},
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "locationId",
									"value": "2",
									"description": "Location Id",
									"disabled": true
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								},
								{
									"key": "schoolId",
									"value": "1",
									"description": "School Id",
									"disabled": true
								},
								{
									"key": "sortParameter",
									"value": "BY_REGISTRATION_DATE",
									"description": "Parameter to select sorting"
								},
								{
									"key": "startPeriodDate",
									"value": "1990-07-27",
									"description": "Parameter with start date",
									"disabled": true
								},
								{
									"key": "universityId",
									"value": "3",
									"description": "University Id",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of users profiles",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get users profiles, filtered by age",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userProfiles?endPeriodDate=2004-11-13&firstResult=0&maxResults=0&startPeriodDate=1990-07-27",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userProfiles"
							],
							"query": [
								{
									"key": "endPeriodDate",
									"value": "2004-11-13",
									"description": "Parameter with end date"
								},
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "locationId",
									"value": "2",
									"description": "Location Id",
									"disabled": true
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								},
								{
									"key": "schoolId",
									"value": "1",
									"description": "School Id",
									"disabled": true
								},
								{
									"key": "sortParameter",
									"value": "BY_REGISTRATION_DATE",
									"description": "Parameter to select sorting",
									"disabled": true
								},
								{
									"key": "startPeriodDate",
									"value": "1990-07-27",
									"description": "Parameter with start date"
								},
								{
									"key": "universityId",
									"value": "3",
									"description": "University Id",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of users profiles",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get users profiles, filtered by location",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userProfiles?firstResult=0&locationId=2&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userProfiles"
							],
							"query": [
								{
									"key": "endPeriodDate",
									"value": "2004-11-13",
									"description": "Parameter with end date",
									"disabled": true
								},
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "locationId",
									"value": "2",
									"description": "Location Id"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								},
								{
									"key": "schoolId",
									"value": "1",
									"description": "School Id",
									"disabled": true
								},
								{
									"key": "sortParameter",
									"value": "BY_REGISTRATION_DATE",
									"description": "Parameter to select sorting",
									"disabled": true
								},
								{
									"key": "startPeriodDate",
									"value": "1990-07-27",
									"description": "Parameter with start date",
									"disabled": true
								},
								{
									"key": "universityId",
									"value": "3",
									"description": "University Id",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved list of users profiles",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get users profiles, filtered by school",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userProfiles?firstResult=0&maxResults=0&schoolId=3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userProfiles"
							],
							"query": [
								{
									"key": "endPeriodDate",
									"value": "2004-11-13",
									"description": "Parameter with end date",
									"disabled": true
								},
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "locationId",
									"value": "2",
									"description": "Location Id",
									"disabled": true
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								},
								{
									"key": "schoolId",
									"value": "3",
									"description": "School Id"
								},
								{
									"key": "sortParameter",
									"value": "BY_REGISTRATION_DATE",
									"description": "Parameter to select sorting",
									"disabled": true
								},
								{
									"key": "startPeriodDate",
									"value": "1990-07-27",
									"description": "Parameter with start date",
									"disabled": true
								},
								{
									"key": "universityId",
									"value": "3",
									"description": "University Id",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of users profiles",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get users profiles, filtered by university",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userProfiles?firstResult=0&maxResults=0&universityId=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userProfiles"
							],
							"query": [
								{
									"key": "endPeriodDate",
									"value": "2004-11-13",
									"description": "Parameter with end date",
									"disabled": true
								},
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "locationId",
									"value": "2",
									"description": "Location Id",
									"disabled": true
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								},
								{
									"key": "schoolId",
									"value": "3",
									"description": "School Id",
									"disabled": true
								},
								{
									"key": "sortParameter",
									"value": "BY_REGISTRATION_DATE",
									"description": "Parameter to select sorting",
									"disabled": true
								},
								{
									"key": "startPeriodDate",
									"value": "1990-07-27",
									"description": "Parameter with start date",
									"disabled": true
								},
								{
									"key": "universityId",
									"value": "5",
									"description": "University Id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of users profiles",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles?endPeriodDate=<date>&firstResult=<integer>&locationId=<long>&maxResults=<integer>&schoolId=<long>&sortParameter=<string>&startPeriodDate=<date>&universityId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<date>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "locationId",
											"value": "<long>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "schoolId",
											"value": "<long>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										},
										{
											"key": "startPeriodDate",
											"value": "<date>"
										},
										{
											"key": "universityId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to update the profile of a given user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dateOfBirth\": \"1990-07-28\",\n  \"id\": 1,\n  \"location\": {\n    \"city\": \"Minsk\",\n    \"country\": \"Belarus\",\n    \"id\": 1\n  },\n  \"name\": \"Stepan\",\n  \"registrationDate\": \"2020-07-11 10:00\",\n  \"school\": {\n    \"id\": 1,\n    \"location\": {\n      \"city\": \"Minsk\",\n      \"country\": \"Belarus\",\n      \"id\": 1\n    },\n    \"name\": \"Secondary school number 104\"\n  },\n  \"schoolGraduationYear\": 2007,\n  \"surname\": \"Poltorak\",\n  \"telephone_number\": \"+375(??)766-54-23\",\n  \"university\": {\n    \"id\": 1,\n    \"location\": {\n      \"city\": \"Minsk\",\n      \"country\": \"Belarus\",\n      \"id\": 1\n    },\n    \"name\": \"Academy of Management under the President of the Republic of Belarus\"\n  },\n  \"universityGraduationYear\": 2013\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/userProfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userProfiles"
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateOfBirth\": \"1990-07-28\",\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Petya\",\n    \"registrationDate\": \"2020-07-11 10:00\",\n    \"school\": {\n        \"id\": 1,\n        \"location\": {\n            \"city\": \"Minsk\",\n            \"country\": \"Belarus\",\n            \"id\": 1\n        },\n        \"name\": \"Secondary school number 104\"\n    },\n    \"schoolGraduationYear\": 2007,\n    \"surname\": \"Buhmetovich\",\n    \"telephone_number\": \"+375(29)766-54-23\",\n    \"university\": {\n        \"id\": 1,\n        \"location\": {\n            \"city\": \"Minsk\",\n            \"country\": \"Belarus\",\n            \"id\": 1\n        },\n        \"name\": \"Academy of Management under the President of the Republic of Belarus\"\n    },\n    \"universityGraduationYear\": 2013\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/userProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateOfBirth\": \"1990-07-28\",\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Petya\",\n    \"registrationDate\": \"2020-07-11 10:00\",\n    \"school\": {\n        \"id\": 1,\n        \"location\": {\n            \"city\": \"Minsk\",\n            \"country\": \"Belarus\",\n            \"id\": 1\n        },\n        \"name\": \"Secondary school number 104\"\n    },\n    \"schoolGraduationYear\": 2007,\n    \"surname\": \"Buhmetovich\",\n    \"telephone_number\": \"+375(29)766-54-23\",\n    \"university\": {\n        \"id\": 1,\n        \"location\": {\n            \"city\": \"Minsk\",\n            \"country\": \"Belarus\",\n            \"id\": 1\n        },\n        \"name\": \"Academy of Management under the President of the Republic of Belarus\"\n    },\n    \"universityGraduationYear\": 2013\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/userProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateOfBirth\": \"1990-07-28\",\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Petya\",\n    \"registrationDate\": \"2020-07-11 10:00\",\n    \"school\": {\n        \"id\": 1,\n        \"location\": {\n            \"city\": \"Minsk\",\n            \"country\": \"Belarus\",\n            \"id\": 1\n        },\n        \"name\": \"Secondary school number 104\"\n    },\n    \"schoolGraduationYear\": 2007,\n    \"surname\": \"Buhmetovich\",\n    \"telephone_number\": \"+375(29)766-54-23\",\n    \"university\": {\n        \"id\": 1,\n        \"location\": {\n            \"city\": \"Minsk\",\n            \"country\": \"Belarus\",\n            \"id\": 1\n        },\n        \"name\": \"Academy of Management under the President of the Republic of Belarus\"\n    },\n    \"universityGraduationYear\": 2013\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/userProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Profile updated successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateOfBirth\": \"1990-07-28\",\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Petya\",\n    \"registrationDate\": \"2020-07-11 10:00\",\n    \"school\": {\n        \"id\": 1,\n        \"location\": {\n            \"city\": \"Minsk\",\n            \"country\": \"Belarus\",\n            \"id\": 1\n        },\n        \"name\": \"Secondary school number 104\"\n    },\n    \"schoolGraduationYear\": 2007,\n    \"surname\": \"Buhmetovich\",\n    \"telephone_number\": \"+375(29)766-54-23\",\n    \"university\": {\n        \"id\": 1,\n        \"location\": {\n            \"city\": \"Minsk\",\n            \"country\": \"Belarus\",\n            \"id\": 1\n        },\n        \"name\": \"Academy of Management under the President of the Republic of Belarus\"\n    },\n    \"universityGraduationYear\": 2013\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/userProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dateOfBirth\": \"1990-07-28\",\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Petya\",\n    \"registrationDate\": \"2020-07-11 10:00\",\n    \"school\": {\n        \"id\": 1,\n        \"location\": {\n            \"city\": \"Minsk\",\n            \"country\": \"Belarus\",\n            \"id\": 1\n        },\n        \"name\": \"Secondary school number 104\"\n    },\n    \"schoolGraduationYear\": 2007,\n    \"surname\": \"Buhmetovich\",\n    \"telephone_number\": \"+375(29)766-54-23\",\n    \"university\": {\n        \"id\": 1,\n        \"location\": {\n            \"city\": \"Minsk\",\n            \"country\": \"Belarus\",\n            \"id\": 1\n        },\n        \"name\": \"Academy of Management under the President of the Republic of Belarus\"\n    },\n    \"universityGraduationYear\": 2013\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/userProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get the profile of a given user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userProfiles/own",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userProfiles",
								"own"
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/own",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										"own"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved user profile",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/own",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										"own"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/own",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										"own"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/own",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										"own"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get dialog with user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userProfiles/:id/privateMessages?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userProfiles",
								":id",
								"privateMessages"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "3",
									"description": "(Required) User profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/:id/privateMessages?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										":id",
										"privateMessages"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/:id/privateMessages?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										":id",
										"privateMessages"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/:id/privateMessages?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										":id",
										"privateMessages"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of private messages",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/:id/privateMessages?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										":id",
										"privateMessages"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get a details of user profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userProfiles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userProfiles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3",
									"description": "(Required) User profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved user profile",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete a record from the database by the admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userProfiles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userProfiles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3",
									"description": "(Required) User profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "User deleted successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userProfiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userProfiles",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "communities",
			"item": [
				{
					"name": "posts",
					"item": [
						{
							"name": "This method is used to get a list of community posts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/communities/:id/posts?firstResult=0&maxResults=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id",
										"posts"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "0",
											"description": "The number of the first element of the expected list"
										},
										{
											"key": "maxResults",
											"value": "0",
											"description": "Maximum number of list elements"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "(Required)  Community id"
										}
									]
								}
							},
							"response": [
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/posts?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"posts"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/posts?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"posts"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/posts?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"posts"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved list of posts",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/posts?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"posts"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This method is used to add a post to the community of the given account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"Join us to hear from Huawei Corporate Senior Vice President Catherine Chen, on how gender balance is crucial for building a diverse and inclusive digital economy, and education is a key to empower women in the tech industry.\",\n  \"title\": \"Join to us\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/communities/:id/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id",
										"posts"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required)  Community id"
										}
									]
								}
							},
							"response": [
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Join us to hear from Huawei Corporate Senior Vice President Catherine Chen, on how gender balance is crucial for building a diverse and inclusive digital economy, and education is a key to empower women in the tech industry.\",\n    \"title\": \"Join to us\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/communities/:id/posts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"posts"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Post added successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Join us to hear from Huawei Corporate Senior Vice President Catherine Chen, on how gender balance is crucial for building a diverse and inclusive digital economy, and education is a key to empower women in the tech industry.\",\n    \"title\": \"Join to us\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/communities/:id/posts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"posts"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Join us to hear from Huawei Corporate Senior Vice President Catherine Chen, on how gender balance is crucial for building a diverse and inclusive digital economy, and education is a key to empower women in the tech industry.\",\n    \"title\": \"Join to us\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/communities/:id/posts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"posts"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Join us to hear from Huawei Corporate Senior Vice President Catherine Chen, on how gender balance is crucial for building a diverse and inclusive digital economy, and education is a key to empower women in the tech industry.\",\n    \"title\": \"Join to us\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/communities/:id/posts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"posts"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Join us to hear from Huawei Corporate Senior Vice President Catherine Chen, on how gender balance is crucial for building a diverse and inclusive digital economy, and education is a key to empower women in the tech industry.\",\n    \"title\": \"Join to us\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/communities/:id/posts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"posts"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "subscriptions",
					"item": [
						{
							"name": "This method is used to subscribe to the community",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/communities/:id/subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id",
										"subscriptions"
									],
									"variable": [
										{
											"key": "id",
											"value": "3",
											"description": "(Required)  Community id"
										}
									]
								}
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"subscriptions"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Subscription to community was successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"subscriptions"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"subscriptions"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"subscriptions"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"subscriptions"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This method is used to unsubscribe from the community",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/communities/:id/subscriptions/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id",
										"subscriptions",
										"changes"
									],
									"variable": [
										{
											"key": "id",
											"value": "3",
											"description": "(Required)  Community id"
										}
									]
								}
							},
							"response": [
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/subscriptions/changes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"subscriptions",
												"changes"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/subscriptions/changes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"subscriptions",
												"changes"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/subscriptions/changes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"subscriptions",
												"changes"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/subscriptions/changes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"subscriptions",
												"changes"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Community unsubscription was successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:id/subscriptions/changes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":id",
												"subscriptions",
												"changes"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "This method is used to get communities that have not been deleted. Sort by communityType",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities?communityType=SPORT&firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities"
							],
							"query": [
								{
									"key": "communityType",
									"value": "SPORT",
									"description": "The type of community to filter the list by"
								},
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								},
								{
									"key": "sortParameter",
									"value": "0",
									"description": "Parameter to select sorting",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities?communityType=<string>&firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									],
									"query": [
										{
											"key": "communityType",
											"value": "<string>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities?communityType=<string>&firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									],
									"query": [
										{
											"key": "communityType",
											"value": "<string>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities?communityType=<string>&firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									],
									"query": [
										{
											"key": "communityType",
											"value": "<string>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of communities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities?communityType=<string>&firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									],
									"query": [
										{
											"key": "communityType",
											"value": "<string>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get communities that have not been deleted. Sort by NUMBER_OF_SUBSCRIBERS",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities?firstResult=0&maxResults=0&sortParameter=NUMBER_OF_SUBSCRIBERS",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities"
							],
							"query": [
								{
									"key": "communityType",
									"value": "SPORT",
									"description": "The type of community to filter the list by",
									"disabled": true
								},
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								},
								{
									"key": "sortParameter",
									"value": "NUMBER_OF_SUBSCRIBERS",
									"description": "Parameter to select sorting"
								}
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities?communityType=<string>&firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									],
									"query": [
										{
											"key": "communityType",
											"value": "<string>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities?communityType=<string>&firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									],
									"query": [
										{
											"key": "communityType",
											"value": "<string>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities?communityType=<string>&firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									],
									"query": [
										{
											"key": "communityType",
											"value": "<string>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of communities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities?communityType=<string>&firstResult=<integer>&maxResults=<integer>&sortParameter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									],
									"query": [
										{
											"key": "communityType",
											"value": "<string>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "sortParameter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get the communities of the user of his account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities/own?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								"own"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/own?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"own"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/own?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"own"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/own?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"own"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of communities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/own?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"own"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get the communities that the user has subscribed to",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities/subscriptions?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								"subscriptions"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/subscriptions?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"subscriptions"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/subscriptions?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"subscriptions"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/subscriptions?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"subscriptions"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of communities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/subscriptions?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"subscriptions"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to add a new community of the given account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"information\": \"This is the official site of Huawei Europe, communicating the cultivation of digital change, affecting people & business.\",\n  \"title\": \"Huawei Europe\",\n  \"type\": \"SPORT\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/communities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities"
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"information\": \"This is the official site of Huawei Europe, communicating the cultivation of digital change, affecting people & business.\",\n    \"title\": \"Huawei Europe\",\n    \"type\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"information\": \"This is the official site of Huawei Europe, communicating the cultivation of digital change, affecting people & business.\",\n    \"title\": \"Huawei Europe\",\n    \"type\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successful community addition",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"information\": \"This is the official site of Huawei Europe, communicating the cultivation of digital change, affecting people & business.\",\n    \"title\": \"Huawei Europe\",\n    \"type\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"information\": \"This is the official site of Huawei Europe, communicating the cultivation of digital change, affecting people & business.\",\n    \"title\": \"Huawei Europe\",\n    \"type\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"information\": \"This is the official site of Huawei Europe, communicating the cultivation of digital change, affecting people & business.\",\n    \"title\": \"Huawei Europe\",\n    \"type\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to update a new community of the given account",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"author\": {\n    \"id\": 1,\n    \"name\": \"Petya\",\n    \"surname\": \"Buhmetovich\"\n  },\n  \"creationDate\": \"2020-09-21 10:00\",\n  \"deleted\": false,\n  \"id\": 1,\n  \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n  \"title\": \"COVID-19 IN THE WORLD\",\n  \"type\": \"MEDICINE\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/communities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities"
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"creationDate\": \"2020-09-21 10:00\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n    \"title\": \"COVID-19: Updates for the US\",\n    \"type\": \"MEDICINE\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"creationDate\": \"2020-09-21 10:00\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n    \"title\": \"COVID-19: Updates for the US\",\n    \"type\": \"MEDICINE\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successful community update",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"creationDate\": \"2020-09-21 10:00\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n    \"title\": \"COVID-19: Updates for the US\",\n    \"type\": \"MEDICINE\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"creationDate\": \"2020-09-21 10:00\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n    \"title\": \"COVID-19: Updates for the US\",\n    \"type\": \"MEDICINE\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"creationDate\": \"2020-09-21 10:00\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n    \"title\": \"COVID-19: Updates for the US\",\n    \"type\": \"MEDICINE\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete the community of the given account(deletion status is set)",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities/:id/changes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								":id",
								"changes"
							],
							"variable": [
								{
									"key": "id",
									"value": "5",
									"description": "(Required)  Community id"
								}
							]
						}
					},
					"response": [
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Community deleted successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get absolutely all communities by admin.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities/all?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								"all"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved list of communities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/all?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"all"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/all?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"all"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/all?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"all"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/all?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"all"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete a record from the database by the admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "5",
									"description": "(Required)  Community id"
								}
							]
						}
					},
					"response": [
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Community deleted successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "posts",
			"item": [
				{
					"name": "comments",
					"item": [
						{
							"name": "This method is used to get post comments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/:id/comments?firstResult=0&maxResults=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										":id",
										"comments"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "0",
											"description": "The number of the first element of the expected list"
										},
										{
											"key": "maxResults",
											"value": "0",
											"description": "Maximum number of list elements"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) Post id"
										}
									]
								}
							},
							"response": [
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/posts/:id/comments?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"posts",
												":id",
												"comments"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/posts/:id/comments?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"posts",
												":id",
												"comments"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved list of post comments",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/posts/:id/comments?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"posts",
												":id",
												"comments"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/posts/:id/comments?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"posts",
												":id",
												"comments"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This method is used to add new comment to post by this user",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"Let's go!\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/communities/posts/:id/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										":id",
										"comments"
									],
									"variable": [
										{
											"key": "id",
											"value": "3",
											"description": "(Required) Post id"
										}
									]
								}
							},
							"response": [
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Let's go!\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/communities/posts/:id/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"posts",
												":id",
												"comments"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Let's go!\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/communities/posts/:id/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"posts",
												":id",
												"comments"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Let's go!\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/communities/posts/:id/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"posts",
												":id",
												"comments"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully added a comment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Let's go!\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/communities/posts/:id/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"posts",
												":id",
												"comments"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Let's go!\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/communities/posts/:id/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"posts",
												":id",
												"comments"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "This method is used to get posts by admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities/posts?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								"posts"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of posts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get a list of community posts that this user is subscribed to, called the post history",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities/posts/history?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								"posts",
								"history"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved list of posts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/history?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"history"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/history?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"history"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/history?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"history"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/history?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"history"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to update a post by this user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"community\": {\n    \"author\": {\n      \"id\": 1,\n      \"name\": \"Petya\",\n      \"surname\": \"Buhmetovich\"\n    },\n    \"creationDate\": \"2020-09-21 10:00\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n    \"title\": \"COVID-19: Updates for the US\",\n    \"type\": \"MEDICINE\"\n  },\n  \"content\": \"COVID hospitalizations in El Paso have been going down for about 2 weeks now. The number of people in El Paso testing positive for COVID has been declining also. The positivity rate for all of Texas has declined for 14 consecutive days.\",\n  \"creationDate\": \"2020-10-01 20:11\",\n  \"deleted\": false,\n  \"id\": 1,\n  \"title\": \"COVID-19 hospitalizations\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/communities/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								"posts"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"community\": {\n        \"author\": {\n            \"id\": 1,\n            \"name\": \"Petya\",\n            \"surname\": \"Buhmetovich\"\n        },\n        \"creationDate\": \"2020-09-21 10:00\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n        \"title\": \"COVID-19: Updates for the US\",\n        \"type\": \"MEDICINE\"\n    },\n    \"content\": \"COVID hospitalizations in El Paso have been going down for about 2 weeks now. The number of people in El Paso testing positive for COVID has been declining also. The positivity rate for all of Texas has declined for 14 consecutive days.\",\n    \"creationDate\": \"2020-10-01 20:11\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"title\": \"El Paso County sees drop in COVID-19 hospitalizations\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"community\": {\n        \"author\": {\n            \"id\": 1,\n            \"name\": \"Petya\",\n            \"surname\": \"Buhmetovich\"\n        },\n        \"creationDate\": \"2020-09-21 10:00\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n        \"title\": \"COVID-19: Updates for the US\",\n        \"type\": \"MEDICINE\"\n    },\n    \"content\": \"COVID hospitalizations in El Paso have been going down for about 2 weeks now. The number of people in El Paso testing positive for COVID has been declining also. The positivity rate for all of Texas has declined for 14 consecutive days.\",\n    \"creationDate\": \"2020-10-01 20:11\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"title\": \"El Paso County sees drop in COVID-19 hospitalizations\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"community\": {\n        \"author\": {\n            \"id\": 1,\n            \"name\": \"Petya\",\n            \"surname\": \"Buhmetovich\"\n        },\n        \"creationDate\": \"2020-09-21 10:00\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n        \"title\": \"COVID-19: Updates for the US\",\n        \"type\": \"MEDICINE\"\n    },\n    \"content\": \"COVID hospitalizations in El Paso have been going down for about 2 weeks now. The number of people in El Paso testing positive for COVID has been declining also. The positivity rate for all of Texas has declined for 14 consecutive days.\",\n    \"creationDate\": \"2020-10-01 20:11\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"title\": \"El Paso County sees drop in COVID-19 hospitalizations\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully updated a post",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"community\": {\n        \"author\": {\n            \"id\": 1,\n            \"name\": \"Petya\",\n            \"surname\": \"Buhmetovich\"\n        },\n        \"creationDate\": \"2020-09-21 10:00\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n        \"title\": \"COVID-19: Updates for the US\",\n        \"type\": \"MEDICINE\"\n    },\n    \"content\": \"COVID hospitalizations in El Paso have been going down for about 2 weeks now. The number of people in El Paso testing positive for COVID has been declining also. The positivity rate for all of Texas has declined for 14 consecutive days.\",\n    \"creationDate\": \"2020-10-01 20:11\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"title\": \"El Paso County sees drop in COVID-19 hospitalizations\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"community\": {\n        \"author\": {\n            \"id\": 1,\n            \"name\": \"Petya\",\n            \"surname\": \"Buhmetovich\"\n        },\n        \"creationDate\": \"2020-09-21 10:00\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n        \"title\": \"COVID-19: Updates for the US\",\n        \"type\": \"MEDICINE\"\n    },\n    \"content\": \"COVID hospitalizations in El Paso have been going down for about 2 weeks now. The number of people in El Paso testing positive for COVID has been declining also. The positivity rate for all of Texas has declined for 14 consecutive days.\",\n    \"creationDate\": \"2020-10-01 20:11\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"title\": \"El Paso County sees drop in COVID-19 hospitalizations\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete a post by this user",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities/posts/:id/changes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								"posts",
								":id",
								"changes"
							],
							"variable": [
								{
									"key": "id",
									"value": "17",
									"description": "(Required) Post id"
								}
							]
						}
					},
					"response": [
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a post",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete a post by admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities/posts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "17",
									"description": "(Required) Post id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a post",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "posts comments",
			"item": [
				{
					"name": "This method is used to get comments by admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities/posts/comments?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								"posts",
								"comments"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of comments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to update comment by this user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\": 9,\n        \"creationDate\": \"2020-10-06 04:23\",\n        \"author\": {\n            \"id\": 1,\n            \"name\": \"Petya\",\n            \"surname\": \"Buhmetovich\"\n        },\n        \"post\": {\n            \"id\": 5,\n            \"creationDate\": \"2020-10-05 11:34\",\n            \"title\": \"When Lineker Met Maradona\",\n            \"content\": \"At 22:00, we'll be showing our documentary with @GaryLineker from 2006. @GaryLineker talks to Diego Maradona about football, genius and *that* 1986 World Cup quarter-final.\",\n            \"community\": {\n                \"id\": 2,\n                \"creationDate\": \"2020-10-02 12:00\",\n                \"author\": {\n                    \"id\": 2,\n                    \"name\": \"Artem\",\n                    \"surname\": \"Karchevskiy\"\n                },\n                \"type\": \"SPORT\",\n                \"title\": \"BBC Sport\",\n                \"information\": \"Official http://bbc.co.uk/sport account. Also follow @bbcmotd and @bbctms.\",\n                \"deleted\": false\n            },\n            \"deleted\": false\n        },\n        \"content\": \"Very noisy!!!\",\n        \"deleted\": false\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/communities/posts/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								"posts",
								"comments"
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"Do lockdowns, we need them.\",\n    \"creationDate\": \"2020-10-02 09:23\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"post\": {\n        \"community\": {\n            \"author\": {\n                \"id\": 1,\n                \"name\": \"Petya\",\n                \"surname\": \"Buhmetovich\"\n            },\n            \"creationDate\": \"2020-09-21 10:00\",\n            \"deleted\": false,\n            \"id\": 1,\n            \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n            \"title\": \"COVID-19: Updates for the US\",\n            \"type\": \"MEDICINE\"\n        },\n        \"content\": \"COVID hospitalizations in El Paso have been going down for about 2 weeks now. The number of people in El Paso testing positive for COVID has been declining also. The positivity rate for all of Texas has declined for 14 consecutive days.\",\n        \"creationDate\": \"2020-10-01 20:11\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"title\": \"El Paso County sees drop in COVID-19 hospitalizations\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"Do lockdowns, we need them.\",\n    \"creationDate\": \"2020-10-02 09:23\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"post\": {\n        \"community\": {\n            \"author\": {\n                \"id\": 1,\n                \"name\": \"Petya\",\n                \"surname\": \"Buhmetovich\"\n            },\n            \"creationDate\": \"2020-09-21 10:00\",\n            \"deleted\": false,\n            \"id\": 1,\n            \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n            \"title\": \"COVID-19: Updates for the US\",\n            \"type\": \"MEDICINE\"\n        },\n        \"content\": \"COVID hospitalizations in El Paso have been going down for about 2 weeks now. The number of people in El Paso testing positive for COVID has been declining also. The positivity rate for all of Texas has declined for 14 consecutive days.\",\n        \"creationDate\": \"2020-10-01 20:11\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"title\": \"El Paso County sees drop in COVID-19 hospitalizations\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"Do lockdowns, we need them.\",\n    \"creationDate\": \"2020-10-02 09:23\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"post\": {\n        \"community\": {\n            \"author\": {\n                \"id\": 1,\n                \"name\": \"Petya\",\n                \"surname\": \"Buhmetovich\"\n            },\n            \"creationDate\": \"2020-09-21 10:00\",\n            \"deleted\": false,\n            \"id\": 1,\n            \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n            \"title\": \"COVID-19: Updates for the US\",\n            \"type\": \"MEDICINE\"\n        },\n        \"content\": \"COVID hospitalizations in El Paso have been going down for about 2 weeks now. The number of people in El Paso testing positive for COVID has been declining also. The positivity rate for all of Texas has declined for 14 consecutive days.\",\n        \"creationDate\": \"2020-10-01 20:11\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"title\": \"El Paso County sees drop in COVID-19 hospitalizations\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"Do lockdowns, we need them.\",\n    \"creationDate\": \"2020-10-02 09:23\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"post\": {\n        \"community\": {\n            \"author\": {\n                \"id\": 1,\n                \"name\": \"Petya\",\n                \"surname\": \"Buhmetovich\"\n            },\n            \"creationDate\": \"2020-09-21 10:00\",\n            \"deleted\": false,\n            \"id\": 1,\n            \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n            \"title\": \"COVID-19: Updates for the US\",\n            \"type\": \"MEDICINE\"\n        },\n        \"content\": \"COVID hospitalizations in El Paso have been going down for about 2 weeks now. The number of people in El Paso testing positive for COVID has been declining also. The positivity rate for all of Texas has declined for 14 consecutive days.\",\n        \"creationDate\": \"2020-10-01 20:11\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"title\": \"El Paso County sees drop in COVID-19 hospitalizations\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully updated a comment",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"Do lockdowns, we need them.\",\n    \"creationDate\": \"2020-10-02 09:23\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"post\": {\n        \"community\": {\n            \"author\": {\n                \"id\": 1,\n                \"name\": \"Petya\",\n                \"surname\": \"Buhmetovich\"\n            },\n            \"creationDate\": \"2020-09-21 10:00\",\n            \"deleted\": false,\n            \"id\": 1,\n            \"information\": \"This page is a timeline of Tweets with the latest information and advice from the CDC, HHS, NIH and public health authorities across the country. For more, visit https://https://cdc.gov/coronavirus.\",\n            \"title\": \"COVID-19: Updates for the US\",\n            \"type\": \"MEDICINE\"\n        },\n        \"content\": \"COVID hospitalizations in El Paso have been going down for about 2 weeks now. The number of people in El Paso testing positive for COVID has been declining also. The positivity rate for all of Texas has declined for 14 consecutive days.\",\n        \"creationDate\": \"2020-10-01 20:11\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"title\": \"El Paso County sees drop in COVID-19 hospitalizations\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete comment by admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities/posts/comments/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								"posts",
								"comments",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "33",
									"description": "(Required) Post comment id"
								}
							]
						}
					},
					"response": [
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a comment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete comment by this user",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/communities/posts/comments/:id/changes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities",
								"posts",
								"comments",
								":id",
								"changes"
							],
							"variable": [
								{
									"key": "id",
									"value": "33",
									"description": "(Required) Post comment id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a comment",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/posts/comments/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"posts",
										"comments",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "locations",
			"item": [
				{
					"name": "This method is used to get locations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/locations?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved list of locations",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to add new location by admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"city\": \"Maladzyechna\",\n  \"country\": \"Belarus\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"city\": \"Maladzyechna\",\n    \"country\": \"Belarus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"city\": \"Maladzyechna\",\n    \"country\": \"Belarus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved a location",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"city\": \"Maladzyechna\",\n    \"country\": \"Belarus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"city\": \"Maladzyechna\",\n    \"country\": \"Belarus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to update location by admin",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"city\": \"Minsk-city\",\n  \"country\": \"Belarus-country\",\n  \"id\": 1\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"city\": \"Minsk\",\n    \"country\": \"Belarus\",\n    \"id\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully updated a location",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"city\": \"Minsk\",\n    \"country\": \"Belarus\",\n    \"id\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"city\": \"Minsk\",\n    \"country\": \"Belarus\",\n    \"id\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"city\": \"Minsk\",\n    \"country\": \"Belarus\",\n    \"id\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"city\": \"Minsk\",\n    \"country\": \"Belarus\",\n    \"id\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete location by admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/locations/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "8",
									"description": "(Required) Location id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully deleted a location",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/locations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "private Messages",
			"item": [
				{
					"name": "This method is used to get private messages by this user. Can be filtered by date and time.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/privateMessages?endPeriodDate=2020-11-11 12:05&firstResult=0&maxResults=0&startPeriodDate=2020-11-01 12:04",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"privateMessages"
							],
							"query": [
								{
									"key": "endPeriodDate",
									"value": "2020-11-11 12:05",
									"description": "Parameter with end date"
								},
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								},
								{
									"key": "startPeriodDate",
									"value": "2020-11-01 12:04",
									"description": "Parameter with start date"
								}
							]
						}
					},
					"response": [
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages?endPeriodDate=<dateTime>&firstResult=<integer>&maxResults=<integer>&startPeriodDate=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<dateTime>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "startPeriodDate",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages?endPeriodDate=<dateTime>&firstResult=<integer>&maxResults=<integer>&startPeriodDate=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<dateTime>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "startPeriodDate",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages?endPeriodDate=<dateTime>&firstResult=<integer>&maxResults=<integer>&startPeriodDate=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<dateTime>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "startPeriodDate",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of private messages",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages?endPeriodDate=<dateTime>&firstResult=<integer>&maxResults=<integer>&startPeriodDate=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages"
									],
									"query": [
										{
											"key": "endPeriodDate",
											"value": "<dateTime>"
										},
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "startPeriodDate",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get unread messages",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/privateMessages/unreadMessages?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"privateMessages",
								"unreadMessages"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/unreadMessages?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										"unreadMessages"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/unreadMessages?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										"unreadMessages"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/unreadMessages?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										"unreadMessages"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of private messages",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/unreadMessages?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										"unreadMessages"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to add new private message by this user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"Hi, Bro!\",\n  \"recipient\": {\n    \"id\": 1,\n    \"name\": \"Petya\",\n    \"surname\": \"Buhmetovich\"\n  }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/privateMessages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"privateMessages"
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Hi, Bro!\",\n    \"recipient\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/privateMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Hi, Bro!\",\n    \"recipient\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/privateMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved a private message",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Hi, Bro!\",\n    \"recipient\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/privateMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Hi, Bro!\",\n    \"recipient\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/privateMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to update private message by this user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"Go home, yanki!\",\n  \"deleted\": false,\n  \"departureDate\": \"2020-11-11 12:00\",\n  \"id\": 1,\n  \"read\": false,\n  \"recipient\": {\n    \"id\": 1,\n    \"name\": \"Petya\",\n    \"surname\": \"Buhmetovich\"\n  },\n  \"sender\": {\n    \"id\": 1,\n    \"name\": \"Petya\",\n    \"surname\": \"Buhmetovich\"\n  }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/privateMessages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"privateMessages"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Your great aunt just passed away. LOL\",\n    \"deleted\": false,\n    \"departureDate\": \"2020-11-11 12:00\",\n    \"id\": 1,\n    \"read\": false,\n    \"recipient\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"sender\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/privateMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Your great aunt just passed away. LOL\",\n    \"deleted\": false,\n    \"departureDate\": \"2020-11-11 12:00\",\n    \"id\": 1,\n    \"read\": false,\n    \"recipient\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"sender\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/privateMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Your great aunt just passed away. LOL\",\n    \"deleted\": false,\n    \"departureDate\": \"2020-11-11 12:00\",\n    \"id\": 1,\n    \"read\": false,\n    \"recipient\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"sender\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/privateMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Your great aunt just passed away. LOL\",\n    \"deleted\": false,\n    \"departureDate\": \"2020-11-11 12:00\",\n    \"id\": 1,\n    \"read\": false,\n    \"recipient\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"sender\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/privateMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully updated a private message",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Your great aunt just passed away. LOL\",\n    \"deleted\": false,\n    \"departureDate\": \"2020-11-11 12:00\",\n    \"id\": 1,\n    \"read\": false,\n    \"recipient\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"sender\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/privateMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get private messages by admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/privateMessages/admin?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"privateMessages",
								"admin"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/admin?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										"admin"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/admin?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										"admin"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/admin?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										"admin"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of private messages",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/admin?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										"admin"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete private message by admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/privateMessages/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"privateMessages",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "15",
									"description": "(Required) Private message id"
								}
							]
						}
					},
					"response": [
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a private message",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete private message by this user",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/privateMessages/:id/changes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"privateMessages",
								":id",
								"changes"
							],
							"variable": [
								{
									"key": "id",
									"value": "15",
									"description": "(Required) Private message id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a private message",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/privateMessages/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privateMessages",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "public Messages",
			"item": [
				{
					"name": "comments",
					"item": [
						{
							"name": "This method is used to get public message comments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/:id/comments?firstResult=0&maxResults=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										":id",
										"comments"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "0",
											"description": "The number of the first element of the expected list"
										},
										{
											"key": "maxResults",
											"value": "0",
											"description": "Maximum number of list elements"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) Public message id"
										}
									]
								}
							},
							"response": [
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/publicMessages/:id/comments?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"publicMessages",
												":id",
												"comments"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/publicMessages/:id/comments?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"publicMessages",
												":id",
												"comments"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/publicMessages/:id/comments?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"publicMessages",
												":id",
												"comments"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved list of public message comments",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/publicMessages/:id/comments?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"publicMessages",
												":id",
												"comments"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>"
												},
												{
													"key": "maxResults",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This method is used to add new public message comment by this user",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"Bro why P40 doesn't have google?\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages/:id/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										":id",
										"comments"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) Public message id"
										}
									]
								}
							},
							"response": [
								{
									"name": "The resource you were trying to reach is not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Bro why P40 doesn't have google?\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/publicMessages/:id/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"publicMessages",
												":id",
												"comments"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Accessing the resource you were trying to reach is forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Bro why P40 doesn't have google?\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/publicMessages/:id/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"publicMessages",
												":id",
												"comments"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved a public message comment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Bro why P40 doesn't have google?\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/publicMessages/:id/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"publicMessages",
												":id",
												"comments"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "You are not authorized to view the resource",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Bro why P40 doesn't have google?\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/publicMessages/:id/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"publicMessages",
												":id",
												"comments"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "This method is used to get public messages by admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/publicMessages/admin?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"publicMessages",
								"admin"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/admin?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"admin"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/admin?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"admin"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/admin?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"admin"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of public messages",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/admin?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"admin"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get public messages of a given user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/publicMessages?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"publicMessages"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of public messages",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to add new public message of a given user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"The customer placed the check on the table and told the owner he would see him when they reopen.\\n(CNN)A local restaurant in Cleveland received a holiday surprise as it was voluntarily closing due to the increase of Covid-19 cases in Ohio.\\nBrendon Ring, who owns staple local establishment Nighttown, told CNN that he was having lunch at his restaurant when a semi-regular customer came over and left his check at his table that included a $3,000 tip.\",\n  \"title\": \"Local restaurant in Cleveland is shocked when a customer leaves a $3,000 tip\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/publicMessages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"publicMessages"
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved a public message",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"The customer placed the check on the table and told the owner he would see him when they reopen.\\n(CNN)A local restaurant in Cleveland received a holiday surprise as it was voluntarily closing due to the increase of Covid-19 cases in Ohio.\\nBrendon Ring, who owns staple local establishment Nighttown, told CNN that he was having lunch at his restaurant when a semi-regular customer came over and left his check at his table that included a $3,000 tip.\",\n    \"title\": \"Local restaurant in Cleveland is shocked when a customer leaves a $3,000 tip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"The customer placed the check on the table and told the owner he would see him when they reopen.\\n(CNN)A local restaurant in Cleveland received a holiday surprise as it was voluntarily closing due to the increase of Covid-19 cases in Ohio.\\nBrendon Ring, who owns staple local establishment Nighttown, told CNN that he was having lunch at his restaurant when a semi-regular customer came over and left his check at his table that included a $3,000 tip.\",\n    \"title\": \"Local restaurant in Cleveland is shocked when a customer leaves a $3,000 tip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"The customer placed the check on the table and told the owner he would see him when they reopen.\\n(CNN)A local restaurant in Cleveland received a holiday surprise as it was voluntarily closing due to the increase of Covid-19 cases in Ohio.\\nBrendon Ring, who owns staple local establishment Nighttown, told CNN that he was having lunch at his restaurant when a semi-regular customer came over and left his check at his table that included a $3,000 tip.\",\n    \"title\": \"Local restaurant in Cleveland is shocked when a customer leaves a $3,000 tip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"The customer placed the check on the table and told the owner he would see him when they reopen.\\n(CNN)A local restaurant in Cleveland received a holiday surprise as it was voluntarily closing due to the increase of Covid-19 cases in Ohio.\\nBrendon Ring, who owns staple local establishment Nighttown, told CNN that he was having lunch at his restaurant when a semi-regular customer came over and left his check at his table that included a $3,000 tip.\",\n    \"title\": \"Local restaurant in Cleveland is shocked when a customer leaves a $3,000 tip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to update the public message of a given user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"author\": {\n    \"id\": 1,\n    \"name\": \"Petya\",\n    \"surname\": \"Buhmetovich\"\n  },\n  \"content\": \"I deleted everything. I’m done. For those who wanted me to “address it” I did. I’m sure u can find it reposted somewhere. But I don’t want this energy in my life or on my timeline. I’m too sensitive for this shit and I’m done.\",\n  \"creationDate\": \"2020-07-21 10:00\",\n  \"deleted\": false,\n  \"id\": 1,\n  \"title\": \"It was boring.\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/publicMessages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"publicMessages"
							]
						}
					},
					"response": [
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"I deleted everything. I’m done. For those who wanted me to “address it” I did. I’m sure u can find it reposted somewhere. But I don’t want this energy in my life or on my timeline. I’m too sensitive for this shit and I’m done.\",\n    \"creationDate\": \"2020-07-21 10:00\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"title\": \"I deleted everything.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"I deleted everything. I’m done. For those who wanted me to “address it” I did. I’m sure u can find it reposted somewhere. But I don’t want this energy in my life or on my timeline. I’m too sensitive for this shit and I’m done.\",\n    \"creationDate\": \"2020-07-21 10:00\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"title\": \"I deleted everything.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"I deleted everything. I’m done. For those who wanted me to “address it” I did. I’m sure u can find it reposted somewhere. But I don’t want this energy in my life or on my timeline. I’m too sensitive for this shit and I’m done.\",\n    \"creationDate\": \"2020-07-21 10:00\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"title\": \"I deleted everything.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"I deleted everything. I’m done. For those who wanted me to “address it” I did. I’m sure u can find it reposted somewhere. But I don’t want this energy in my life or on my timeline. I’m too sensitive for this shit and I’m done.\",\n    \"creationDate\": \"2020-07-21 10:00\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"title\": \"I deleted everything.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully updated a public message",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"I deleted everything. I’m done. For those who wanted me to “address it” I did. I’m sure u can find it reposted somewhere. But I don’t want this energy in my life or on my timeline. I’m too sensitive for this shit and I’m done.\",\n    \"creationDate\": \"2020-07-21 10:00\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"title\": \"I deleted everything.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete the public message of a given user",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/publicMessages/:id/changes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"publicMessages",
								":id",
								"changes"
							],
							"variable": [
								{
									"key": "id",
									"value": "9",
									"description": "(Required) Public message id"
								}
							]
						}
					},
					"response": [
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a public message",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete a record from the database by the admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/publicMessages/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"publicMessages",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "9",
									"description": "(Required) Public message id"
								}
							]
						}
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a public message",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "public messages comments",
			"item": [
				{
					"name": "This method is used to get public messages comments by admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/publicMessages/comments?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"publicMessages",
								"comments"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved list of public messages comments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to update public message comment by this user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"author\": {\n    \"id\": 1,\n    \"name\": \"Petya\",\n    \"surname\": \"Buhmetovich\"\n  },\n  \"content\": \"Now he doesn't think about other people's opinions.\",\n  \"creationDate\": \"2020-07-21 11:23\",\n  \"deleted\": false,\n  \"id\": 1,\n  \"publicMessage\": {\n    \"author\": {\n      \"id\": 1,\n      \"name\": \"Petya\",\n      \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"I deleted everything. I’m done. For those who wanted me to “address it” I did. I’m sure u can find it reposted somewhere. But I don’t want this energy in my life or on my timeline. I’m too sensitive for this shit and I’m done.\",\n    \"creationDate\": \"2020-07-21 10:00\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"title\": \"I deleted everything.\"\n  }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/publicMessages/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"publicMessages",
								"comments"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"I know I’m a couple months late but everyone saying Shane the same person he was when he started YouTube, can you see his transformed into this caring youtuber, yeah he made funny sketches which may offend some people but at the time he was posting it to make people laugh\",\n    \"creationDate\": \"2020-07-21 11:23\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"publicMessage\": {\n        \"author\": {\n            \"id\": 1,\n            \"name\": \"Petya\",\n            \"surname\": \"Buhmetovich\"\n        },\n        \"content\": \"I deleted everything. I’m done. For those who wanted me to “address it” I did. I’m sure u can find it reposted somewhere. But I don’t want this energy in my life or on my timeline. I’m too sensitive for this shit and I’m done.\",\n        \"creationDate\": \"2020-07-21 10:00\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"title\": \"I deleted everything.\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"I know I’m a couple months late but everyone saying Shane the same person he was when he started YouTube, can you see his transformed into this caring youtuber, yeah he made funny sketches which may offend some people but at the time he was posting it to make people laugh\",\n    \"creationDate\": \"2020-07-21 11:23\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"publicMessage\": {\n        \"author\": {\n            \"id\": 1,\n            \"name\": \"Petya\",\n            \"surname\": \"Buhmetovich\"\n        },\n        \"content\": \"I deleted everything. I’m done. For those who wanted me to “address it” I did. I’m sure u can find it reposted somewhere. But I don’t want this energy in my life or on my timeline. I’m too sensitive for this shit and I’m done.\",\n        \"creationDate\": \"2020-07-21 10:00\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"title\": \"I deleted everything.\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"I know I’m a couple months late but everyone saying Shane the same person he was when he started YouTube, can you see his transformed into this caring youtuber, yeah he made funny sketches which may offend some people but at the time he was posting it to make people laugh\",\n    \"creationDate\": \"2020-07-21 11:23\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"publicMessage\": {\n        \"author\": {\n            \"id\": 1,\n            \"name\": \"Petya\",\n            \"surname\": \"Buhmetovich\"\n        },\n        \"content\": \"I deleted everything. I’m done. For those who wanted me to “address it” I did. I’m sure u can find it reposted somewhere. But I don’t want this energy in my life or on my timeline. I’m too sensitive for this shit and I’m done.\",\n        \"creationDate\": \"2020-07-21 10:00\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"title\": \"I deleted everything.\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully updated a public message comment",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"I know I’m a couple months late but everyone saying Shane the same person he was when he started YouTube, can you see his transformed into this caring youtuber, yeah he made funny sketches which may offend some people but at the time he was posting it to make people laugh\",\n    \"creationDate\": \"2020-07-21 11:23\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"publicMessage\": {\n        \"author\": {\n            \"id\": 1,\n            \"name\": \"Petya\",\n            \"surname\": \"Buhmetovich\"\n        },\n        \"content\": \"I deleted everything. I’m done. For those who wanted me to “address it” I did. I’m sure u can find it reposted somewhere. But I don’t want this energy in my life or on my timeline. I’m too sensitive for this shit and I’m done.\",\n        \"creationDate\": \"2020-07-21 10:00\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"title\": \"I deleted everything.\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": {\n        \"id\": 1,\n        \"name\": \"Petya\",\n        \"surname\": \"Buhmetovich\"\n    },\n    \"content\": \"I know I’m a couple months late but everyone saying Shane the same person he was when he started YouTube, can you see his transformed into this caring youtuber, yeah he made funny sketches which may offend some people but at the time he was posting it to make people laugh\",\n    \"creationDate\": \"2020-07-21 11:23\",\n    \"deleted\": false,\n    \"id\": 1,\n    \"publicMessage\": {\n        \"author\": {\n            \"id\": 1,\n            \"name\": \"Petya\",\n            \"surname\": \"Buhmetovich\"\n        },\n        \"content\": \"I deleted everything. I’m done. For those who wanted me to “address it” I did. I’m sure u can find it reposted somewhere. But I don’t want this energy in my life or on my timeline. I’m too sensitive for this shit and I’m done.\",\n        \"creationDate\": \"2020-07-21 10:00\",\n        \"deleted\": false,\n        \"id\": 1,\n        \"title\": \"I deleted everything.\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete public message comment by this user",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/publicMessages/comments/:id/changes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"publicMessages",
								"comments",
								":id",
								"changes"
							],
							"variable": [
								{
									"key": "id",
									"value": "17",
									"description": "(Required) Public message comment id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a public message comment",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments/:id/changes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments",
										":id",
										"changes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete public message comment by admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/publicMessages/comments/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"publicMessages",
								"comments",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "17",
									"description": "(Required) Public message comment id"
								}
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a public message comment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/publicMessages/comments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"publicMessages",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "schools",
			"item": [
				{
					"name": "This method is used to get schools",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/schools?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schools"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schools?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schools?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of schools",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schools?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schools?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to add new school by admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": {\n    \"city\": \"Minsk\",\n    \"country\": \"Belarus\",\n    \"id\": 1\n  },\n  \"name\": \"Gymnasium number 29\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/schools",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schools"
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Gymnasium number 29\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/schools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved a school",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Gymnasium number 29\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/schools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Gymnasium number 29\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/schools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Gymnasium number 29\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/schools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to update school by admin",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,\n  \"location\": {\n    \"city\": \"Minsk\",\n    \"country\": \"Belarus\",\n    \"id\": 1\n  },\n  \"name\": \"Secondary School 104 named after R.N. Machulsky\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/schools",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schools"
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Secondary school number 104\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/schools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully updated a school",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Secondary school number 104\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/schools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Secondary school number 104\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/schools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Secondary school number 104\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/schools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Secondary school number 104\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/schools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete school by admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/schools/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"schools",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "16",
									"description": "(Required) School id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schools/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a school",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schools/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schools/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schools/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schools/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schools",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "universities",
			"item": [
				{
					"name": "This method is used to get universities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/universities?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"universities"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/universities?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of locations",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/universities?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/universities?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/universities?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to add new university by admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"location\": {\n    \"city\": \"Minsk\",\n    \"country\": \"Belarus\",\n    \"id\": 1\n  },\n  \"name\": \"Institute of culture of the Republic of Belarus\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/universities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"universities"
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Institute of culture of the Republic of Belarus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/universities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Institute of culture of the Republic of Belarus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/universities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Institute of culture of the Republic of Belarus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/universities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved a location",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Institute of culture of the Republic of Belarus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/universities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to update university by admin",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,\n  \"location\": {\n    \"city\": \"Minsk\",\n    \"country\": \"Belarus\",\n    \"id\": 1\n  },\n  \"name\": \"The Academy of Management under the Council of Ministers of the BSSR\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/universities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"universities"
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Academy of Management under the President of the Republic of Belarus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/universities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Academy of Management under the President of the Republic of Belarus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/universities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully updated a location",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Academy of Management under the President of the Republic of Belarus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/universities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Academy of Management under the President of the Republic of Belarus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/universities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"location\": {\n        \"city\": \"Minsk\",\n        \"country\": \"Belarus\",\n        \"id\": 1\n    },\n    \"name\": \"Academy of Management under the President of the Republic of Belarus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/universities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete university by admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/universities/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"universities",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "10",
									"description": "(Required) Location id"
								}
							]
						}
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/universities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/universities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/universities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a location",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/universities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/universities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"universities",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "weather Conditions",
			"item": [
				{
					"name": "This method is used to get weather conditions by admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/weatherConditions?firstResult=0&maxResults=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"weatherConditions"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "0",
									"description": "The number of the first element of the expected list"
								},
								{
									"key": "maxResults",
									"value": "0",
									"description": "Maximum number of list elements"
								}
							]
						}
					},
					"response": [
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weatherConditions?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weatherConditions"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved list of weather conditions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weatherConditions?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weatherConditions"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weatherConditions?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weatherConditions"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weatherConditions?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weatherConditions"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>"
										},
										{
											"key": "maxResults",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to get weather condition by this user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/weatherConditions/location",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"weatherConditions",
								"location"
							]
						}
					},
					"response": [
						{
							"name": "Successfully retrieved a weather condition",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weatherConditions/location",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weatherConditions",
										"location"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weatherConditions/location",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weatherConditions",
										"location"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weatherConditions/location",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weatherConditions",
										"location"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weatherConditions/location",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weatherConditions",
										"location"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "This method is used to delete weather condition by admin",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/weatherConditions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"weatherConditions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<long>",
									"description": "(Required) Weather condition id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Accessing the resource you were trying to reach is forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weatherConditions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weatherConditions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weatherConditions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weatherConditions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The resource you were trying to reach is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weatherConditions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weatherConditions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted a weather condition",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weatherConditions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weatherConditions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You are not authorized to view the resource",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/weatherConditions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"weatherConditions",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMUB0ZXN0LmNvbSIsImlhdCI6MTYwNzg3ODcwNiwiZXhwIjoxNjA3ODk4NzA2fQ.m15IDwKEm3q12iUnJxAC47XUuXnBIeTqfNi7rXsxcUc",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4e3728d5-ce6c-488a-b32b-beba1c81181a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e091a62c-1bb2-4305-b4a9-108a70de4f7e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "504f21bf-7d3b-4b63-87cc-4b45154ae03b",
			"key": "baseUrl",
			"value": "localhost:2308/socialnetwork"
		}
	],
	"protocolProfileBehavior": {}
}